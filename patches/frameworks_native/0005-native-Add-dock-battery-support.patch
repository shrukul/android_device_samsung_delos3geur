From a7e552c82f97a1c0ec85869334a01f8c898f59ef Mon Sep 17 00:00:00 2001
From: Jorge Ruesga <jorge@ruesga.com>
Date: Tue, 3 Dec 2013 01:32:08 +0100
Subject: [PATCH 1/5] native: Add dock battery support

Dock battery patchset chain:
base: http://review.cyanogenmod.org/#/c/55349/
native: http://review.cyanogenmod.org/#/c/55028/
healthd: http://review.cyanogenmod.org/#/c/55029/
settings: http://review.cyanogenmod.org/#/c/55212/
tf700t: http://review.cyanogenmod.org/#/c/55030/

Video (battery styles): https://www.dropbox.com/s/a7dp3glb7lv1zcg/dock_sdcard01.mp4
Screenshots:
 * No dock: https://www.dropbox.com/s/2yvngdaqok32xiz/dock_sdcard01.png?m=
 * No charging: https://www.dropbox.com/s/ezghtgoedei17oj/dock_sdcard02.png?m=
 * Docked no charging: https://www.dropbox.com/s/7fasc05fw5ylfxi/dock_sdcard03.png?m=
 * Docked charging: https://www.dropbox.com/s/x37vrhxzd075f7p/dock_sdcard04.png?m=

Change-Id: I5f1431736cd6d6d2f6c593881323d3efb5db6b3f
Signed-off-by: Jorge Ruesga <jorge@ruesga.com>
---
 include/batteryservice/BatteryService.h       | 13 +++++++++++++
 services/batteryservice/BatteryProperties.cpp | 28 +++++++++++++++++++++++++++
 2 files changed, 41 insertions(+)

diff --git a/include/batteryservice/BatteryService.h b/include/batteryservice/BatteryService.h
index 829061a..e9376f4 100644
--- a/include/batteryservice/BatteryService.h
+++ b/include/batteryservice/BatteryService.h
@@ -45,8 +45,10 @@ enum {
 
 struct BatteryProperties {
     bool chargerAcOnline;
+    bool chargerDockAcOnline;
     bool chargerUsbOnline;
     bool chargerWirelessOnline;
+
     int batteryStatus;
     int batteryHealth;
     bool batteryPresent;
@@ -57,6 +59,17 @@ struct BatteryProperties {
     int batteryTemperature;
     String8 batteryTechnology;
 
+    bool dockBatterySupported;
+    int dockBatteryStatus;
+    int dockBatteryHealth;
+    bool dockBatteryPresent;
+    int dockBatteryLevel;
+    int dockBatteryVoltage;
+    int dockBatteryCurrentNow;
+    int dockBatteryChargeCounter;
+    int dockBatteryTemperature;
+    String8 dockBatteryTechnology;
+
     status_t writeToParcel(Parcel* parcel) const;
     status_t readFromParcel(Parcel* parcel);
 };
diff --git a/services/batteryservice/BatteryProperties.cpp b/services/batteryservice/BatteryProperties.cpp
index e4a42ed..4111d9a 100644
--- a/services/batteryservice/BatteryProperties.cpp
+++ b/services/batteryservice/BatteryProperties.cpp
@@ -31,8 +31,10 @@ namespace android {
 
 status_t BatteryProperties::readFromParcel(Parcel* p) {
     chargerAcOnline = p->readInt32() == 1 ? true : false;
+    chargerDockAcOnline = p->readInt32() == 1 ? true : false;
     chargerUsbOnline = p->readInt32() == 1 ? true : false;
     chargerWirelessOnline = p->readInt32() == 1 ? true : false;
+
     batteryStatus = p->readInt32();
     batteryHealth = p->readInt32();
     batteryPresent = p->readInt32() == 1 ? true : false;
@@ -42,13 +44,27 @@ status_t BatteryProperties::readFromParcel(Parcel* p) {
     batteryChargeCounter = p->readInt32();
     batteryTemperature = p->readInt32();
     batteryTechnology = String8((p->readString16()).string());
+
+    dockBatterySupported = p->readInt32() == 1 ? true : false;
+    dockBatteryStatus = p->readInt32();
+    dockBatteryHealth = p->readInt32();
+    dockBatteryPresent = p->readInt32() == 1 ? true : false;
+    dockBatteryLevel = p->readInt32();
+    dockBatteryVoltage = p->readInt32();
+    dockBatteryCurrentNow = p->readInt32();
+    dockBatteryChargeCounter = p->readInt32();
+    dockBatteryTemperature = p->readInt32();
+    dockBatteryTechnology = String8((p->readString16()).string());
+
     return OK;
 }
 
 status_t BatteryProperties::writeToParcel(Parcel* p) const {
     p->writeInt32(chargerAcOnline ? 1 : 0);
+    p->writeInt32(chargerDockAcOnline ? 1 : 0);
     p->writeInt32(chargerUsbOnline ? 1 : 0);
     p->writeInt32(chargerWirelessOnline ? 1 : 0);
+
     p->writeInt32(batteryStatus);
     p->writeInt32(batteryHealth);
     p->writeInt32(batteryPresent ? 1 : 0);
@@ -58,6 +74,18 @@ status_t BatteryProperties::writeToParcel(Parcel* p) const {
     p->writeInt32(batteryChargeCounter);
     p->writeInt32(batteryTemperature);
     p->writeString16(String16(batteryTechnology));
+
+    p->writeInt32(dockBatterySupported ? 1 : 0);
+    p->writeInt32(dockBatteryStatus);
+    p->writeInt32(dockBatteryHealth);
+    p->writeInt32(dockBatteryPresent ? 1 : 0);
+    p->writeInt32(dockBatteryLevel);
+    p->writeInt32(dockBatteryVoltage);
+    p->writeInt32(dockBatteryCurrentNow);
+    p->writeInt32(dockBatteryChargeCounter);
+    p->writeInt32(dockBatteryTemperature);
+    p->writeString16(String16(dockBatteryTechnology));
+
     return OK;
 }
 
-- 
1.8.3.2

